steps:
  - id: HelmUpgrade
    name: 'gcr.io/$PROJECT_ID/helm:${_HELM_TAG}'
    args: ['upgrade', '${_APP_NAME}', 'deployments/helm/hello',
      '--install', '--force', '--reset-values',
      '--history-max', '5',
      '--namespace', '$_NAMESPACE',
      '-f', './deployments/helm/hello/values.yaml',
      '-f', './deployments/helm/hello/values-${_ENVIRONMENT}.yaml',
      '--set-string', 'api.app.image=gcr.io/${PROJECT_ID}/${_APP_NAME}:${_APP_TAG}',
      '--set-string', 'svc1.app.image=gcr.io/${PROJECT_ID}/${_APP_NAME}:${_APP_TAG}',
      '--set-string', 'svc2.app.image=gcr.io/${PROJECT_ID}/${_APP_NAME}:${_APP_TAG}'
    ]
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_CLUSTER_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}'
      - 'HELM_REPO_NAME=stable'
      # for helm3, do not set the repo
      #- 'HELM_REPO_URL=https://kubernetes-charts.storage.googleapis.com'

  - id: GenerateProtobuf
    name: 'gcr.io/$PROJECT_ID/protoc:latest'
    entrypoint: 'bash'
    args: [ './scripts/generate_proto.sh' ]
    waitFor: ['-']

  - id: DeployCloudEndpoint
    name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'endpoints'
      - 'services'
      - 'deploy'
      - 'api/config/api_descriptor.pb'
      - './api/config/api_config.yaml'
    waitFor: ['GenerateProtobuf']