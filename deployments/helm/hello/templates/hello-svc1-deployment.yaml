apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Values.svc1.deployment.name }}'
  labels:
    app: '{{ .Values.svc1.name }}'
    component: '{{ .Values.svc1.deployment.name }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: '{{ .Values.svc1.name }}'
      component: '{{ .Values.svc1.deployment.name }}'
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      {{- if .Values.useSvcMesh }}
        sidecar.istio.io/inject: '{{ .Values.svc1.deployment.injectAsmSideCar }}'
      {{- end }}
      labels:
        app: '{{ .Values.svc1.name }}'
        component: '{{ .Values.svc1.deployment.name }}'
      namespace: {{ .Values.gcp.namespace }}
    spec:
      containers:
        - name: {{ .Values.svc1.name }}
          image: {{ .Values.svc1.app.image }}
          imagePullPolicy: {{ .Values.svc1.app.pullPolicy }}
          ports:
          - containerPort: {{ .Values.svc1.app.grpcPort }}
            name: grpc-port
          command: ['/app', '--name=svc1', '--port={{ .Values.svc1.app.grpcPort }}']
          env:
            - name: APP_ENV
              value: "{{ .Values.environment }}"
          resources:
            requests:
              cpu: {{ .Values.svc1.app.cpu.min }}
              memory: {{ .Values.svc1.app.memory.min }}
            limits:
              cpu: {{ .Values.svc1.app.cpu.max }}
              memory: {{ .Values.svc1.app.memory.max }}
          #livenessProbe:
          #  httpGet:
          #    path: /healthz
          #    port: {{ .Values.svc1.app.port }}
          #    scheme: HTTP
          #  initialDelaySeconds: 15
          #  periodSeconds: 5
          #readinessProbe:
          #  httpGet:
          #    path: /healthz
          #    port: {{ .Values.svc1.app.port }}
          #    scheme: HTTP
          #  initialDelaySeconds: 15
          #  periodSeconds: 5
