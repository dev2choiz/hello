apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Values.svc1.deployment.name }}'
  labels:
    app: '{{ .Values.svc1.name }}'
    component: '{{ .Values.svc1.deployment.name }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: '{{ .Values.svc1.name }}'
      component: '{{ .Values.svc1.deployment.name }}'
  template:
    metadata:
      {{- if .Values.useSvcMesh }}
      annotations:
        sidecar.istio.io/inject: '{{ .Values.svc1.deployment.injectAsmSideCar }}'
      {{- end }}
      labels:
        app: '{{ .Values.svc1.name }}'
        component: '{{ .Values.svc1.deployment.name }}'
      namespace: {{ .Values.gcp.namespace }}
    spec:
      containers:
        - name: {{ .Values.svc1.name }}
          image: {{ .Values.svc1.app.image }}
          imagePullPolicy: {{ .Values.svc1.app.pullPolicy }}
          ports:
          - containerPort: {{ .Values.svc1.app.grpcPort }}
            name: grpc-port
          command: ['/hello-svc', '-name=svc1', '-mode=grpc', '-grpc-port={{ .Values.svc1.app.grpcPort }}', '-http-port={{ .Values.svc1.app.port }}']
          #livenessProbe:
          #  httpGet:
          #    path: /healthz
          #    port: {{ .Values.svc1.app.port }}
          #    scheme: HTTP
          #  initialDelaySeconds: 15
          #  periodSeconds: 5
          #readinessProbe:
          #  httpGet:
          #    path: /healthz
          #    port: {{ .Values.svc1.app.port }}
          #    scheme: HTTP
          #  initialDelaySeconds: 15
          #  periodSeconds: 5
